@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 88, 28, 135;
  --background-start-rgb: 245, 243, 255;
  --background-end-rgb: 253, 244, 255;
}

@layer base {
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }

  body {
    color: rgb(var(--foreground-rgb));
    background: linear-gradient(
      135deg,
      rgb(var(--background-start-rgb)),
      rgb(var(--background-end-rgb))
    );
    min-height: 100vh;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply tracking-tight;
  }
}

/* Typography */
.font-display {
  font-family: 'Inter', system-ui, sans-serif;
  font-feature-settings: "ss01", "ss02", "cv01", "cv02";
}

/* Animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0) rotate(0);
  }
  50% {
    transform: translateY(-10px) rotate(var(--rotation, 0deg));
  }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
  --rotation: 0deg;
}

.animate-float[class*="rotate-"] {
  --rotation: var(--tw-rotate);
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-text {
  background-size: 200% 200%;
  animation: gradient 6s ease infinite;
}

@keyframes pulse-glow {
  0%, 100% {
    opacity: 0.8;
    transform: scale(1);
  }
  50% {
    opacity: 0.4;
    transform: scale(1.05);
  }
}

.pulse-glow {
  animation: pulse-glow 4s ease-in-out infinite;
}

/* Card Styles */
.glass-card {
  @apply backdrop-blur-lg bg-white/90;
  box-shadow: 
    0 8px 32px 0 rgba(31, 38, 135, 0.07),
    inset 0 0 0 1px rgba(255, 255, 255, 0.1);
}

.card-hover {
  @apply transition-all duration-300 ease-out;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.card-hover:hover {
  transform: translateY(-4px) rotateX(2deg);
  box-shadow: 
    0 12px 24px -8px rgba(88, 28, 135, 0.15),
    0 4px 8px -4px rgba(88, 28, 135, 0.1);
}

/* Decorative Elements */
.gradient-border {
  position: relative;
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 2px;
    background: linear-gradient(
      to right,
      theme('colors.purple.400'),
      theme('colors.indigo.400')
    );
    mask: 
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }
}

/* Interactive Elements */
.interactive-button {
  @apply transition-all duration-300 ease-out;
  transform-style: preserve-3d;
}

.interactive-button:hover {
  @apply shadow-lg;
  transform: translateY(-2px) scale(1.01);
}

.interactive-button:active {
  @apply shadow-md;
  transform: translateY(0) scale(0.99);
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #f3e8ff;
  border-radius: 8px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, #c084fc, #818cf8);
  border-radius: 8px;
  border: 2px solid #f3e8ff;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, #a855f7, #6366f1);
}

/* Responsive Design */
@media (max-width: 640px) {
  .container {
    @apply px-4;
  }
  
  h1 {
    @apply text-3xl;
  }
  
  h2 {
    @apply text-xl;
  }

  .animate-float {
    animation-duration: 2s;
  }
}

/* Focus States */
.focus-ring {
  @apply focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50;
}

/* Loading States */
.loading {
  @apply animate-pulse bg-purple-100;
}

/* Decorative Patterns */
.pattern-dots {
  background-image: radial-gradient(
    circle at 1px 1px,
    theme('colors.purple.200') 1px,
    transparent 0
  );
  background-size: 20px 20px;
}

.pattern-grid {
  background-image: linear-gradient(
    theme('colors.purple.100') 1px,
    transparent 1px
  ),
  linear-gradient(
    90deg,
    theme('colors.purple.100') 1px,
    transparent 1px
  );
  background-size: 20px 20px;
}

/* Section Headers */
.section-header {
  @apply relative z-10 overflow-hidden;
}

.section-header::before {
  content: '';
  @apply absolute top-1/2 left-0 w-full h-0.5 bg-gradient-to-r from-purple-200 to-transparent -translate-y-1/2 z-0;
}

.section-header::after {
  content: '';
  @apply absolute top-1/2 right-0 w-full h-0.5 bg-gradient-to-l from-purple-200 to-transparent -translate-y-1/2 z-0;
}

/* Card and Container Styles */
.glass-morphism {
  @apply backdrop-blur-sm bg-white/70;
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.07);
}

.exercise-card {
  @apply transition-all duration-300 ease-in-out;
  background-clip: padding-box;
}

.exercise-card:hover {
  transform: translateY(-4px);
  @apply shadow-xl;
}

.feedback-textarea {
  @apply transition-all duration-300 ease-in-out;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.95));
}

.feedback-textarea:focus {
  @apply border-purple-500 ring-2 ring-purple-200 outline-none;
  background: white;
}

/* Card hover effects */
.hover-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
}

.hover-card:hover {
  transform: translateY(-4px) rotateX(2deg) rotateY(2deg);
}

/* Button gradient animation */
.gradient-button {
  background-size: 200% 200%;
  animation: gradient 4s ease infinite;
  transition: all 0.3s ease;
}

.gradient-button:hover {
  background-size: 150% 150%;
  transform: translateY(-2px);
}

/* Skill badges animation */
.skill-badge {
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhanced Animations */
@keyframes float-advanced {
  0% {
    transform: translateY(0) rotate(0);
  }
  25% {
    transform: translateY(-8px) rotate(2deg);
  }
  75% {
    transform: translateY(4px) rotate(-1deg);
  }
  100% {
    transform: translateY(0) rotate(0);
  }
}

@keyframes shine {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes pulse-ring {
  0% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  100% {
    transform: scale(1.3);
    opacity: 0;
  }
}

.animate-float-advanced {
  animation: float-advanced 6s ease-in-out infinite;
}

.shine-effect {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  background-size: 200% 100%;
  animation: shine 3s infinite;
}

.pulse-ring-effect::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  animation: pulse-ring 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  @apply bg-purple-500/30;
}

/* Interactive Illustrations */
.floating-illustration {
  @apply relative transform transition-transform;
}

.floating-illustration:hover {
  transform: translateY(-8px) scale(1.05);
}

.glow-effect {
  @apply relative overflow-hidden;
}

.glow-effect::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.3) 0%,
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.3s;
}

.glow-effect:hover::after {
  opacity: 1;
}

/* Navigation Bar Styles */
.nav-gradient {
  background-size: 200% 200%;
  animation: gradient 15s ease infinite;
}

.nav-logo {
  position: relative;
}

.nav-logo::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(
    to right,
    transparent,
    rgba(255, 255, 255, 0.7),
    transparent
  );
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.nav-logo:hover::after {
  transform: scaleX(1);
}

/* Enhanced Shine Effect */
.shine-effect {
  position: relative;
  overflow: hidden;
}

.shine-effect::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transform: rotate(45deg);
  animation: shine 3s infinite;
}

@keyframes shine {
  0% {
    transform: translateX(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) rotate(45deg);
  }
} 